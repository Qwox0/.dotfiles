# set == set-option
# set -g: global
# set -a: append

# <https://www.man7.org/linux/man-pages/man1/tmux.1.html>
# <https://www.seanh.cc/2020/12/28/binding-keys-in-tmux/>
# <https://ianthehenry.com/posts/how-to-configure-tmux/>

set -sa terminal-overrides ",xterm*:Tc"
set -g default-terminal "tmux-256color"
set -s escape-time 0
set -g display-time 2000
set -g status-style "bg=#333333 fg=#5eacd3"
set -g base-index 1
set -g mode-keys vi
set -g history-limit 10000
set -g mouse on

set -g @plugin 'tmux-plugins/tmux-resurrect'

# if-shell -F command: if -F "return 0 or 1" "tmux command if 1" "tmux command if 0"

# show all keybindings: `tmux list-keys` or `prefix : list-keys`

# bind -n: don't use prefix key
# bind -r: repeatable (prefix + key + key + key + ... possible)

set -g prefix C-t
bind C-t send-prefix

bind t new-window
bind q killp
bind -r C-t new-window
bind -r C-q killp

bind -r n next-window
bind -r b previous-window
bind -r C-n next-window
bind -r C-b previous-window
bind -nr C-n next-window
bind -nr C-b previous-window

bind v copy-mode
unbind -a -T copy-mode

bind r source-file ~/.tmux.conf # \; display-message "`~/.tmux.conf` reloaded"
bind -nr C-f run-shell "tmux neww ~/.dotfiles/scripts/tmux-sessionizer"
#bind -r O run-shell "~/.local/bin/tmux-sessionizer ~/work/nrdp"
#bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"

#bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -i -sel clipboard'
bind -T copy-mode-vi C-y send-keys -X rectangle-toggle

# paste with mouse wheel click
bind -n MouseDown2Pane run "xclip -o -sel primary | tmux load-buffer - ; tmux paste-buffer"
#bind -n MouseDown2Pane if -F '#{?#{m:*vim*,#{pane_current_command}},0,1}' 'display "test: #{pane_current_command}"'
#bind -n MouseDown2Pane if -F '#{m:*vim*,#{pane_current_command}}' '' 'display "test: #{pane_current_command}"'

bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear "xclip -i -sel primary"

#bind -n DoubleClick1Pane if -F '#{m:*vim*,#{pane_current_command}}' '' 'select-pane \; copy-mode -M \; send-keys -X select-word \; send-keys -X copy-pipe-no-clear "xclip -in -sel primary"'
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send-keys -X select-word \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word \; \
    send-keys -X copy-pipe-no-clear "xclip -in -sel primary"

unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection
#bind -T copy-mode-vi MouseDown1Pane send-keys -X cancel # also ends copy-mode
bind -T copy-mode-vi MouseDown3Pane send-keys -X cancel
bind -T copy-mode-vi Escape send-keys -X cancel

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M on
